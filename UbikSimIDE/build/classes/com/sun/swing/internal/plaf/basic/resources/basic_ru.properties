# basic_ru.properties 16 Jun 2008
#
# Translated to Russian by Basimov Ilgiz and Kazimirov Valentin
#
# Copyright (c) 2007-2008 Emmanuel PUYBARET / eTeks <info@eteks.com>. All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 59 Temple
# Place, Suite 330, Boston, MA 02111-1307 USA

# This properties file is used to create a PropertyResourceBundle
# It contains Locale specific strings used in Swing
# Currently, the following components need this for support:
#
#    ColorChooser
#    FileChooser
#    OptionPane
#
# When this file is read in, the strings are put into the 
# defaults table.  This is an implementation detail of the current
# workings of Swing.  DO NOT DEPEND ON THIS.  
# This may change in future versions of Swing as we improve localization 
# support.
#
#                        MNEMONIC NOTE:
# Many of strings in this file are used by widgets that have a
# mnemonic, for example:
#   ColorChooser.rgbNameText=RGB
#   ColorChooser.rgbMnemonic=71
#   ColorChooser.rgbDisplayedMnemonicIndex=1
# Indicates that the tab in the ColorChooser for RGB colors will have
# the text 'RGB', further the mnemonic character will be 'g' and that
# a decoration will be provided under the 'G'. This will typically
# look like:  RGB
#              -
# 71 corresponds to the decimal value of the VK constant defined
# in java/awt/KeyEvent.java. VK_G is defined as:
#
#    public static final int VK_G              = 0x47;
#
# 0x47 is a hex number and needs to be converted to decimal.
# A simple way to calculate this for a-z is to add 64 to the index of
# the letter in the alphabet. As 'a' is in the 1st letter the mnemonic
# for 'a' is 65, 'b' is 66...
#
# The xxDisplayedMnemonicIndex is used to indicate the index of the
# character that should be underlined in the String, with 0
# corresponding to the first character in the String.
#
# One important thing to remember is that the mnemonic MUST exist in
# the String, if it does not exist you should add text that makes it
# exist. This will typically take the form 'XXXX (M)' where M is the
# character for the mnemonic.
# 
# 1.18 10/09/03
# @author Steve Wilson

############ FILE CHOOSER STRINGS #############
FileChooser.fileDescriptionText=\u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u0444\u0430\u0439\u043b
FileChooser.directoryDescriptionText=\u041f\u0430\u043f\u043a\u0430
FileChooser.newFolderErrorText=\u041e\u0448\u0438\u0431\u043a\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043f\u0430\u043f\u043a\u0438
FileChooser.newFolderErrorSeparator= : 
FileChooser.acceptAllFileFilterText=\u0412\u0441\u0435 \u0444\u0430\u0439\u043b\u044b
FileChooser.cancelButtonText=\u041e\u0442\u043c\u0435\u043d\u0430
FileChooser.cancelButtonMnemonic=67
FileChooser.saveButtonText=\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c
FileChooser.saveButtonMnemonic=83
FileChooser.openButtonText=\u041e\u0442\u043a\u0440\u044b\u0442\u044c
FileChooser.openButtonMnemonic=79
FileChooser.saveDialogTitleText=\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c
FileChooser.openDialogTitleText=\u041e\u0442\u043a\u0440\u044b\u0442\u044c
FileChooser.updateButtonText=\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c
FileChooser.updateButtonMnemonic=85
FileChooser.helpButtonText=\u041f\u043e\u043c\u043e\u0449\u044c
FileChooser.helpButtonMnemonic=72
FileChooser.directoryOpenButtonText=\u041e\u0442\u043a\u0440\u044b\u0442\u044c
FileChooser.directoryOpenButtonMnemonic=79
# These strings are platform dependent not look and feel dependent.
FileChooser.win32.newFolder=\u041d\u043e\u0432\u0430\u044f \u041f\u0430\u043f\u043a\u0430
FileChooser.win32.newFolder.subsequent=\u041d\u043e\u0432\u0430\u044f \u041f\u0430\u043f\u043a\u0430 ({0})
FileChooser.other.newFolder=\u041d\u043e\u0432\u0430\u044f\u041f\u0430\u043f\u043a\u0430
FileChooser.other.newFolder.subsequent=\u041d\u043e\u0432\u0430\u044f\u041f\u0430\u043f\u043a\u0430.{0}

## file chooser tooltips ###
FileChooser.cancelButtonToolTipText=\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u0434\u0438\u0430\u043b\u043e\u0433 \u0432\u044b\u0431\u043e\u0440\u0430 \u0444\u0430\u0439\u043b\u043e\u0432
FileChooser.saveButtonToolTipText=\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0435 \u0444\u0430\u0439\u043b\u044b
FileChooser.openButtonToolTipText=\u041e\u0442\u043a\u0440\u044b\u0442\u044c \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0435 \u0444\u0430\u0439\u043b\u044b
FileChooser.updateButtonToolTipText=\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0444\u0430\u0439\u043b\u043e\u0432
FileChooser.helpButtonToolTipText=\u041f\u043e\u043c\u043e\u0449\u044c \u043f\u043e \u0432\u044b\u0431\u043e\u0440\u0443 \u0444\u0430\u0439\u043b\u043e\u0432
FileChooser.directoryOpenButtonToolTipText=\u041e\u0442\u043a\u0440\u044b\u0442\u044c \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u0443\u044e \u043f\u0430\u043f\u043a\u0443

############ COLOR CHOOSER STRINGS #############
ColorChooser.previewText=\u041f\u0440\u0435\u0434\u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440
ColorChooser.okText=OK
ColorChooser.cancelText=\u041e\u0442\u043c\u0435\u043d\u0430
ColorChooser.resetText=\u0421\u0431\u0440\u043e\u0441\u0438\u0442\u044c
# VK_XXX constant for 'ColorChooser.resetText' button to make mnemonic
ColorChooser.resetMnemonic=82
ColorChooser.sampleText=\u041f\u0440\u0438\u043c\u0435\u0440 \u0442\u0435\u043a\u0441\u0442\u0430  \u041f\u0440\u0438\u043c\u0435\u0440 \u0442\u0435\u043a\u0441\u0442\u0430
ColorChooser.swatchesNameText=\u0413\u0440\u0443\u043f\u043f\u044b
ColorChooser.swatchesMnemonic=83
ColorChooser.swatchesDisplayedMnemonicIndex=0
ColorChooser.swatchesRecentText=\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435:
ColorChooser.hsbNameText=HSB
# Each of the ColorChooser types can define a mnemonic, as a KeyEvent.VK_XXX
# constant, and an index into the text to render the mnemonic as. The
# mnemonic is xxxMnemonic and the index of the character to underline is
# xxxDisplayedMnemonicIndex.
ColorChooser.hsbMnemonic=72
ColorChooser.hsbDisplayedMnemonicIndex=0
ColorChooser.hsbHueText=H
ColorChooser.hsbSaturationText=S
ColorChooser.hsbBrightnessText=B
ColorChooser.hsbRedText=R
ColorChooser.hsbGreenText=G
ColorChooser.hsbBlueText=B
ColorChooser.rgbNameText=RGB
ColorChooser.rgbMnemonic=71
ColorChooser.rgbDisplayedMnemonicIndex=1
ColorChooser.rgbRedText=\u041a\u0440\u0430\u0441\u043d\u044b\u0439
ColorChooser.rgbRedMnemonic=68
ColorChooser.rgbGreenText=\u0417\u0435\u043b\u0435\u043d\u044b\u0439
ColorChooser.rgbGreenMnemonic=78
ColorChooser.rgbBlueText=\u0421\u0438\u043d\u0438\u0439
ColorChooser.rgbBlueMnemonic=66

############ OPTION PANE STRINGS #############
# Mnemonic keys correspond to KeyEvent.VK_XXX constant
# We only define mnemonics for YES/NO, but for completeness you can
# define mnemonics for any of the buttons.
OptionPane.yesButtonText=\u0414\u0430
OptionPane.yesButtonMnemonic=89
OptionPane.noButtonText=\u041d\u0435\u0442
OptionPane.noButtonMnemonic=78
OptionPane.okButtonText=OK
OptionPane.okButtonMnemonic=0
OptionPane.cancelButtonText=\u041e\u0442\u043c\u0435\u043d\u0430
OptionPane.cancelButtonMnemonic=0


############ Abstract Undoable Edit Strings ############
AbstractUndoableEdit.undoText=\u041e\u0442\u043a\u0430\u0442
AbstractUndoableEdit.redoText=\u041d\u0430\u043a\u0430\u0442

