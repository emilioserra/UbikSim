# basic_bg.properties 9 Oct 2009
#
# Translated to Bulgarian by Valentin Laskov
#
# Copyright (c) 2007-2009 Emmanuel PUYBARET / eTeks <info@eteks.com>. All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 59 Temple
# Place, Suite 330, Boston, MA 02111-1307 USA

# This properties file is used to create a PropertyResourceBundle
# It contains Locale specific strings used in Swing
# Currently, the following components need this for support:
#
#    ColorChooser
#    FileChooser
#    OptionPane
#
# When this file is read in, the strings are put into the 
# defaults table.  This is an implementation detail of the current
# workings of Swing.  DO NOT DEPEND ON THIS.  
# This may change in future versions of Swing as we improve localization 
# support.
#
#                        MNEMONIC NOTE:
# Many of strings in this file are used by widgets that have a
# mnemonic, for example:
#   ColorChooser.rgbNameText=RGB
#   ColorChooser.rgbMnemonic=71
#   ColorChooser.rgbDisplayedMnemonicIndex=1
# Indicates that the tab in the ColorChooser for RGB colors will have
# the text 'RGB', further the mnemonic character will be 'g' and that
# a decoration will be provided under the 'G'. This will typically
# look like:  RGB
#              -
# 71 corresponds to the decimal value of the VK constant defined
# in java/awt/KeyEvent.java. VK_G is defined as:
#
#    public static final int VK_G              = 0x47;
#
# 0x47 is a hex number and needs to be converted to decimal.
# A simple way to calculate this for a-z is to add 64 to the index of
# the letter in the alphabet. As 'a' is in the 1st letter the mnemonic
# for 'a' is 65, 'b' is 66...
#
# The xxDisplayedMnemonicIndex is used to indicate the index of the
# character that should be underlined in the String, with 0
# corresponding to the first character in the String.
#
# One important thing to remember is that the mnemonic MUST exist in
# the String, if it does not exist you should add text that makes it
# exist. This will typically take the form 'XXXX (M)' where M is the
# character for the mnemonic.
# 
# 1.18 10/09/03
# @author Steve Wilson

############ FILE CHOOSER STRINGS #############
FileChooser.fileDescriptionText=Generic File
FileChooser.directoryDescriptionText=\u0414\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f
FileChooser.newFolderErrorText=\u0413\u0440\u0435\u0448\u043a\u0430 \u043f\u0440\u0438 \u0441\u044a\u0437\u0434\u0430\u0432\u0430\u043d\u0435 \u043d\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f
FileChooser.newFolderErrorSeparator= : 
FileChooser.acceptAllFileFilterText=\u0412\u0441\u0438\u0447\u043a\u0438 \u0444\u0430\u0439\u043b\u043e\u0432\u0435
FileChooser.cancelButtonText=\u041e\u0442\u043a\u0430\u0437
FileChooser.cancelButtonMnemonic=70
FileChooser.saveButtonText=\u0417\u0430\u043f\u0438\u0448\u0438
FileChooser.saveButtonMnemonic=80
FileChooser.openButtonText=\u041e\u0442\u0432\u043e\u0440\u0438
FileChooser.openButtonMnemonic=82
FileChooser.saveDialogTitleText=\u0417\u0430\u043f\u0438\u0441\u0432\u0430\u043d\u0435
FileChooser.openDialogTitleText=\u041e\u0442\u0432\u0430\u0440\u044f\u043d\u0435
FileChooser.updateButtonText=\u041e\u043f\u0440\u0435\u0441\u043d\u0438
FileChooser.updateButtonMnemonic=69
FileChooser.helpButtonText=\u041f\u043e\u043c\u043e\u0449
FileChooser.helpButtonMnemonic=77
FileChooser.directoryOpenButtonText=\u041e\u0442\u0432\u043e\u0440\u0438
FileChooser.directoryOpenButtonMnemonic=74
# These strings are platform dependent not look and feel dependent.
FileChooser.win32.newFolder=New Folder
FileChooser.win32.newFolder.subsequent=New Folder ({0})
FileChooser.other.newFolder=NewFolder
FileChooser.other.newFolder.subsequent=NewFolder.{0}

## file chooser tooltips ###
FileChooser.cancelButtonToolTipText=\u0418\u0437\u043b\u0438\u0437\u0430\u043d\u0435 \u043e\u0442 \u0434\u0438\u0430\u043b\u043e\u0433\u0430 \u0437\u0430 \u0438\u0437\u0431\u043e\u0440 \u043d\u0430 \u0444\u0430\u0439\u043b
FileChooser.saveButtonToolTipText=\u0417\u0430\u043f\u0438\u0441\u0432\u0430 \u0438\u0437\u0431\u0440\u0430\u043d\u0438\u044f \u0444\u0430\u0439\u043b
FileChooser.openButtonToolTipText=\u041e\u0442\u0432\u0430\u0440\u044f \u0438\u0437\u0431\u0440\u0430\u043d\u0438\u044f \u0444\u0430\u0439\u043b
FileChooser.updateButtonToolTipText=\u041e\u043f\u0440\u0435\u0441\u043d\u044f\u0432\u0430 \u0441\u043f\u0438\u0441\u044a\u043a\u0430 \u0441 \u0444\u0430\u0439\u043b\u043e\u0432\u0435
FileChooser.helpButtonToolTipText=FileChooser help
FileChooser.directoryOpenButtonToolTipText=\u041e\u0442\u0432\u0430\u0440\u044f \u0438\u0437\u0431\u0440\u0430\u043d\u0430\u0442\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f

############ COLOR CHOOSER STRINGS #############
ColorChooser.previewText=\u041f\u0440\u0435\u0433\u043b\u0435\u0434
ColorChooser.okText=\u0413\u043e\u0442\u043e\u0432\u043e
ColorChooser.cancelText=\u0418\u0437\u0445\u043e\u0434
ColorChooser.resetText=\u041f\u0440\u0435\u043c\u0430\u0445\u043d\u0438
# VK_XXX constant for 'ColorChooser.resetText' button to make mnemonic
ColorChooser.resetMnemonic=77
ColorChooser.sampleText=\u041f\u0440\u0438\u043c\u0435\u0440\u0435\u043d \u0442\u0435\u043a\u0441\u0442  \u041f\u0440\u0438\u043c\u0435\u0440\u0435\u043d \u0442\u0435\u043a\u0441\u0442
ColorChooser.swatchesNameText=\u041c\u043e\u0441\u0442\u0440\u0438
ColorChooser.swatchesMnemonic=82
ColorChooser.swatchesDisplayedMnemonicIndex=0
ColorChooser.swatchesRecentText=\u0421\u043a\u043e\u0440\u043e\u0448\u043d\u0438:
ColorChooser.hsbNameText=HSB
# Each of the ColorChooser types can define a mnemonic, as a KeyEvent.VK_XXX
# constant, and an index into the text to render the mnemonic as. The
# mnemonic is xxxMnemonic and the index of the character to underline is
# xxxDisplayedMnemonicIndex.
ColorChooser.hsbMnemonic=72
ColorChooser.hsbDisplayedMnemonicIndex=0
ColorChooser.hsbHueText=H
ColorChooser.hsbSaturationText=S
ColorChooser.hsbBrightnessText=B
ColorChooser.hsbRedText=R
ColorChooser.hsbGreenText=G
ColorChooser.hsbBlueText=B
ColorChooser.rgbNameText=RGB
ColorChooser.rgbMnemonic=71
ColorChooser.rgbDisplayedMnemonicIndex=1
ColorChooser.rgbRedText=\u0427\u0435\u0440\u0432\u0435\u043d\u043e
ColorChooser.rgbRedMnemonic=69
ColorChooser.rgbGreenText=\u0417\u0435\u043b\u0435\u043d\u043e
ColorChooser.rgbGreenMnemonic=80
ColorChooser.rgbBlueText=\u0421\u0438\u043d\u044c\u043e
ColorChooser.rgbBlueMnemonic=73

############ OPTION PANE STRINGS #############
# Mnemonic keys correspond to KeyEvent.VK_XXX constant
# We only define mnemonics for YES/NO, but for completeness you can
# define mnemonics for any of the buttons.
OptionPane.yesButtonText=\u0414\u0430
OptionPane.yesButtonMnemonic=79
OptionPane.noButtonText=\u041d\u0435
OptionPane.noButtonMnemonic=75
OptionPane.okButtonText=OK
OptionPane.okButtonMnemonic=0
OptionPane.cancelButtonText=\u041e\u0442\u043a\u0430\u0437
OptionPane.cancelButtonMnemonic=0


############ Abstract Undoable Edit Strings ############
AbstractUndoableEdit.undoText=\u041e\u0442\u043c\u0435\u043d\u0438
AbstractUndoableEdit.redoText=\u041f\u043e\u0432\u0442\u043e\u0440\u0438

